// ================================================================
//   Program.cs ‚Äî Configuraci√≥n Principal (Versi√≥n API REST FINAL)
// ================================================================
// ‚úîÔ∏è Configura el proyecto .NET como una API REST pura (sin vistas Razor).
// ‚úîÔ∏è Habilita Session con backend de cache en memoria (DistributedMemoryCache).
// ‚úîÔ∏è Registra CryptoService como singleton para hashing seguro.
// ‚úîÔ∏è Incluye middlewares clave: HTTPS, HSTS, Routing y Session.
// ================================================================

// ---------------------------------------------------------------
// üì¶ IMPORTS ‚Äî Espacios de nombres requeridos
// ---------------------------------------------------------------

using Microsoft.AspNetCore.Builder;              // Para construir y configurar la app web.
using Microsoft.Extensions.DependencyInjection;   // Para DI: registrar servicios.
using Microsoft.Extensions.Hosting;               // Para manejar entorno dev/prod.
using EjemploSeguroCapitulo9.Services;            // Para usar CryptoService.

// ---------------------------------------------------------------
// üöÄ 1Ô∏è‚É£ Crear el builder principal de la aplicaci√≥n
// ---------------------------------------------------------------
var builder = WebApplication.CreateBuilder(args);

// ---------------------------------------------------------------
// üîë 2Ô∏è‚É£ Registrar servicios para la API REST segura
// ---------------------------------------------------------------

// ‚úÖ Controladores RESTful
builder.Services.AddControllers();

// ‚úÖ Backend de cache en memoria (requerido para usar Session)
builder.Services.AddDistributedMemoryCache();

// ‚úÖ Habilitar Session: mantiene datos de autenticaci√≥n temporal por usuario
builder.Services.AddSession();

// ‚úÖ Registrar CryptoService como singleton: un solo hash engine para toda la app
builder.Services.AddSingleton<CryptoService>();

// ---------------------------------------------------------------
// üèóÔ∏è 3Ô∏è‚É£ Construir la aplicaci√≥n
// ---------------------------------------------------------------
var app = builder.Build();

// ---------------------------------------------------------------
// üß± 4Ô∏è‚É£ Configurar middlewares de seguridad y routing
// ---------------------------------------------------------------

// ‚úÖ HSTS: obliga a HTTPS (en entornos producci√≥n)
app.UseHsts();

// ‚úÖ Redireccionar peticiones HTTP a HTTPS autom√°ticamente
app.UseHttpsRedirection();

// ‚úÖ Enrutamiento para los controladores
app.UseRouting();

// ‚úÖ Session debe ir despu√©s de Routing, antes de MapControllers
app.UseSession();

// ---------------------------------------------------------------
// üó∫Ô∏è 5Ô∏è‚É£ Mapear controladores API (detecta todos los [ApiController])
// ---------------------------------------------------------------
app.MapControllers();

// ---------------------------------------------------------------
// ‚ñ∂Ô∏è 6Ô∏è‚É£ Ejecutar la aplicaci√≥n
// ---------------------------------------------------------------
app.Run();